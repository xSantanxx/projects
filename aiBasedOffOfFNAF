#include <iostream>
#include <string>
#include <chrono>
#include <thread>

//functions
//make them follow a map to the player
void setGame();
void mainGame(int pPlayer);
int freddyMo(int playerP, int enemyMov, int enemyLo, int moveNum);
int bonnieMo(int playerP, int enemyMov, int enemyLo, int moveNum);
int chicaMo(int playerP, int enemyMov, int enemyLo, int moveNum);
int foxyMo(int playerP, int enemyMov, int enemyLo, int moveNum);
void ifFreddyCaught();
void ifBonnieCaught();
void ifChicaCaught();
void ifFoxyCaught();
void endGame();

int main(){
    std::string answer;
    std::cout << "Play?" << std::endl;
    std::cin >> answer;

    if(answer == "yes"){
        setGame();
    }
    else if(answer == "no"){
        endGame();
    }
}

void setGame(){
    std::cout << "Alri, welcome to the game" << std::endl;
    std::cout << "Hope you have fun" << std::endl;

    srand(time(0));
    int random = ((rand() % 10) + 1);
    int pPlayer = random;
    std::cout << "You start at " << pPlayer << std::endl;

    mainGame(pPlayer);


    std::cout << "" << std::endl;
}

void mainGame(int pPlayer){
    std::cout << "Here how it goes" << std::endl;
    std::cout << "If the enemies, reach up to you" << std::endl;
    std::cout << "Then you lose" << std::endl;

    srand(time(0));
    std::string enemy1 = "Freddy";
    int enemy1Mo = 10;
    int enemy1Lo = 0;
    int enemy1In = 5;
    std::string enemy2 = "Bonnie";
    int enemy2Mo = 5;
    int enemy2Lo = 0;
    int enemy2In = 7;
    std::string enemy3 = "Chica";
    int enemy3Mo = 8;
    int enemy3Lo = 0;
    int enemy3In = 8;
    std::string enemy4 = "Foxy";
    int enemy4Mo = 9;
    int enemy4Lo = 0;
    int enemy4In = 11;

    int i  = 0;

    while(i <= 120){
        system("clear");

        std::cout << "Timer: " << i << "s" << std::endl;

        //int randomP = ((rand() % 12) + 1);
        int randomE = ((rand() % 15));
        
        /*
        pPlayer += randomP;
        if(pPlayer > 10){
            pPlayer -= 10;
        }
        */
        std::cout << "You are at " << pPlayer << std::endl;

        if(i % enemy1In == 0){ //enemy1In = 5
            enemy1Lo = freddyMo(pPlayer, enemy1Mo, enemy1Lo, randomE);
            if(enemy1Lo == -1)
                break;
        }

        if(i % enemy2In == 0){ //enemy1In = 5
            enemy2Lo = bonnieMo(pPlayer, enemy1Mo, enemy1Lo, randomE);
            if(enemy2Lo == -1)
                break;
        }

        if(i % enemy3In == 0){ //enemy1In = 5
            enemy3Lo = chicaMo(pPlayer, enemy1Mo, enemy1Lo, randomE);
            if(enemy3Lo == -1)
                break;
        }

        if(i % enemy4In == 0){ //enemy1In = 5
            enemy4Lo = foxyMo(pPlayer, enemy1Mo, enemy1Lo, randomE);
            if(enemy4Lo == -1)
                break;
        }

        std::this_thread::sleep_for(std::chrono::seconds(1));

        ++i;
    }
}

int freddyMo(int playerP, int enemyMov, int enemyLo, int moveNum){
    
    if(moveNum <= enemyMov){
        enemyLo += moveNum;
        if(enemyLo > 10){
            enemyLo -= 10;
        }
    }
    int disFromP = playerP - enemyLo;
    std::cout << "Freddy is " << disFromP << " from the player" << std::endl;
    if(enemyLo == playerP){
            std::cout << "System Note: Freddy caught you" << std::endl;
            ifFreddyCaught();
            enemyLo -= 10;
            return -1;
            
        }
    return enemyLo;
}

int bonnieMo(int playerP, int enemyMov, int enemyLo, int moveNum){
    
    if(moveNum <= enemyMov){
        enemyLo += moveNum;
        if(enemyLo > 10){
            enemyLo -= 10;
        }
    }
    int disFromP = playerP - enemyLo;
    std::cout << "Bonnie is " << disFromP << " from the player" << std::endl;
    if(enemyLo == playerP){
            std::cout << "System Note: Bonnie caught you" << std::endl;
            ifBonnieCaught();
            enemyLo -= 10;
            return -1;
            
        }
    return enemyLo;
}

int chicaMo(int playerP, int enemyMov, int enemyLo, int moveNum){
    
    if(moveNum <= enemyMov){
        enemyLo += moveNum;
        if(enemyLo > 10){
            enemyLo -= 10;
        }
    }
    int disFromP = playerP - enemyLo;
    std::cout << "Chica is " << disFromP << " from the player" << std::endl;
    if(enemyLo == playerP){
            std::cout << "System Note: Chica caught you" << std::endl;
            ifChicaCaught();
            enemyLo -= 10;
            return -1;
            
        }
    return enemyLo;
}

int foxyMo(int playerP, int enemyMov, int enemyLo, int moveNum){
    
    if(moveNum <= enemyMov){
        enemyLo += moveNum;
        if(enemyLo > 10){
            enemyLo -= 10;
        }
    }
    int disFromP = playerP - enemyLo;
    std::cout << "Foxy is " << disFromP << " from the player" << std::endl;
    if(enemyLo == playerP){
            std::cout << "System Note: Foxy caught you" << std::endl;
            ifFoxyCaught();
            enemyLo -= 10;
            return -1;
            
        }
    return enemyLo;
}


void ifFreddyCaught(){
    std::cout << "I caught youuuuuu hehe xd" << std::endl;
}

void ifBonnieCaught(){
    std::cout << "lol wow" << std::endl;
}

void ifChicaCaught(){
    std::cout << "pizza time" << std::endl;
}

void ifFoxyCaught(){
    std::cout << "AGHHHHH" << std::endl;
}

void endGame(){
    std::cout << "Oh, okay... that's fine" << std::endl;
}
